

import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Types;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author fen
 */
public class EditRow extends javax.swing.JFrame {

    /**
     * Creates new form EditRow
     */
    int columnCount;
    Object [] oldColumn;
    public EditRow(Object[][] oldColumnValues, Object[] columnName) 
    {
        initComponents();
        columnCount=columnName.length;
        oldColumn= new Object[columnCount];
        
        EditTable.setModel(new DefaultTableModel(oldColumnValues, columnName));
        
        for(int i=0;i<columnCount;i++)
        {
          
                oldColumn[i]=EditTable.getValueAt(0, i);
           
        }
            
           
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        EditTable = new javax.swing.JTable();
        btnCommit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        EditTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(EditTable);

        btnCommit.setText("Commit");
        btnCommit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCommitActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(btnCommit)
                        .addGap(154, 154, 154)
                        .addComponent(btnCancel)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCommit)
                    .addComponent(btnCancel))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //Update a single row: 
    private void btnCommitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCommitActionPerformed
        try {
            // TODO add your handling code here:
         
            ResultSetMetaData metaData = Database.getMetaData();
            
            String query="UPDATE "+(String)Database.cbTables.getSelectedItem()+" SET ";
            for(int i=0;i<columnCount;i++)  
            {
                if(EditTable.getValueAt(0, i) !=null)
                {
                    if(i!=0)
                        query+=" , ";
                    if(metaData.getColumnType(i+1)==Types.CHAR || metaData.getColumnType(i+1)==Types.DATE)
                        query+=EditTable.getColumnName(i)+" = '"+EditTable.getValueAt(0, i)+"'";
                    else
                        query+=EditTable.getColumnName(i)+" = "+EditTable.getValueAt(0, i);
                }
                else
                {
                    if(i!=0)
                        query+=" , ";
                    query+=EditTable.getColumnName(i)+" = NULL ";
                }
                    
               
            }
            query+=" WHERE ";
            for(int i=0;i<columnCount;i++)  
            {
                if(oldColumn[i]!=null)
                {
                    if(i!=0)
                        query+=" AND ";
                    if(metaData.getColumnType(i+1)==Types.CHAR|| metaData.getColumnType(i+1)==Types.DATE)
                        query+=EditTable.getColumnName(i)+" = '"+oldColumn[i]+"'";
                    else
                        query+=EditTable.getColumnName(i)+" = "+oldColumn[i];
                }                 
            }
            
            Statement st=Database.connection.createStatement();
            
            st.executeUpdate(query);
            
            this.dispose();
            View.table.requestFocusInWindow();
        }
        catch (SQLException ex)
        {
            
            JOptionPane.showMessageDialog(this, ex+"\n Operation Failed.");
            
        }
    }//GEN-LAST:event_btnCommitActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
   
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable EditTable;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCommit;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
